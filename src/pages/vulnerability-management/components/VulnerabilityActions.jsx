import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';

const VulnerabilityActions = ({ onAction }) => {
  const [isScheduleModalOpen, setIsScheduleModalOpen] = useState(false);

  const primaryActions = [
    {
      label: 'Schedule Scan',
      icon: 'Calendar',
      variant: 'default',
      action: () => setIsScheduleModalOpen(true)
    },
    {
      label: 'Generate Report',
      icon: 'FileText',
      variant: 'outline',
      action: () => onAction('generate-report')
    },
    {
      label: 'Create Remediation Task',
      icon: 'Plus',
      variant: 'outline',
      action: () => onAction('create-task')
    }
  ];

  const quickActions = [
    {
      label: 'Import Scan Results',
      icon: 'Upload',
      description: 'Upload vulnerability scan results from external tools',
      action: () => onAction('import-scan')
    },
    {
      label: 'Export Vulnerabilities',
      icon: 'Download',
      description: 'Export current vulnerability data to CSV or PDF',
      action: () => onAction('export-data')
    },
    {
      label: 'Bulk Assignment',
      icon: 'Users',
      description: 'Assign multiple vulnerabilities to team members',
      action: () => onAction('bulk-assign')
    },
    {
      label: 'Risk Assessment',
      icon: 'TrendingUp',
      description: 'Generate risk assessment report for current vulnerabilities',
      action: () => onAction('risk-assessment')
    }
  ];

  const scanTemplates = [
    { name: 'Full Infrastructure Scan', duration: '4-6 hours', systems: 'All systems' },
    { name: 'Web Application Scan', duration: '2-3 hours', systems: 'Web servers only' },
    { name: 'Network Infrastructure Scan', duration: '1-2 hours', systems: 'Network devices' },
    { name: 'Database Security Scan', duration: '1 hour', systems: 'Database servers' }
  ];

  return (
    <>
      <div className="flex flex-col lg:flex-row items-start lg:items-center justify-between gap-4 mb-6">
        {/* Primary Actions */}
        <div className="flex items-center space-x-3">
          {primaryActions?.map((action) => (
            <Button
              key={action?.label}
              variant={action?.variant}
              iconName={action?.icon}
              iconPosition="left"
              onClick={action?.action}
            >
              {action?.label}
            </Button>
          ))}
        </div>

        {/* View Options */}
        <div className="flex items-center space-x-2">
          <Button variant="ghost" size="sm" iconName="LayoutGrid">
            Grid View
          </Button>
          <Button variant="ghost" size="sm" iconName="List">
            List View
          </Button>
          <Button variant="ghost" size="sm" iconName="Settings">
            Customize
          </Button>
        </div>
      </div>
      {/* Quick Actions Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
        {quickActions?.map((action) => (
          <div
            key={action?.label}
            className="bg-card rounded-lg p-4 security-shadow hover:security-shadow-md transition-security cursor-pointer group"
            onClick={action?.action}
          >
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center group-hover:bg-primary/20 transition-security">
                <Icon name={action?.icon} size={20} className="text-primary" />
              </div>
              <div className="flex-1">
                <h3 className="font-medium text-card-foreground group-hover:text-primary transition-security">
                  {action?.label}
                </h3>
                <p className="text-sm text-muted-foreground mt-1">{action?.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
      {/* Schedule Scan Modal */}
      {isScheduleModalOpen && (
        <div className="fixed inset-0 z-modal flex items-center justify-center">
          <div className="fixed inset-0 bg-background/80 backdrop-blur-sm" onClick={() => setIsScheduleModalOpen(false)} />
          <div className="relative bg-card rounded-lg security-shadow-xl w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto">
            <div className="flex items-center justify-between p-6 border-b border-border">
              <h2 className="text-xl font-semibold text-card-foreground">Schedule Vulnerability Scan</h2>
              <Button
                variant="ghost"
                size="icon"
                onClick={() => setIsScheduleModalOpen(false)}
              >
                <Icon name="X" size={20} />
              </Button>
            </div>

            <div className="p-6 space-y-6">
              {/* Scan Templates */}
              <div>
                <h3 className="text-lg font-medium text-card-foreground mb-4">Select Scan Template</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {scanTemplates?.map((template) => (
                    <div
                      key={template?.name}
                      className="border border-border rounded-lg p-4 hover:border-primary cursor-pointer transition-security"
                    >
                      <h4 className="font-medium text-card-foreground">{template?.name}</h4>
                      <div className="text-sm text-muted-foreground mt-2 space-y-1">
                        <div className="flex items-center space-x-2">
                          <Icon name="Clock" size={14} />
                          <span>Duration: {template?.duration}</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Icon name="Server" size={14} />
                          <span>Scope: {template?.systems}</span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Schedule Options */}
              <div>
                <h3 className="text-lg font-medium text-card-foreground mb-4">Schedule Options</h3>
                <div className="space-y-4">
                  <div className="flex items-center space-x-4">
                    <input type="radio" name="schedule" value="now" className="rounded-full border-border" />
                    <div>
                      <span className="text-sm font-medium text-card-foreground">Run Now</span>
                      <p className="text-xs text-muted-foreground">Start the scan immediately</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-4">
                    <input type="radio" name="schedule" value="later" className="rounded-full border-border" />
                    <div>
                      <span className="text-sm font-medium text-card-foreground">Schedule for Later</span>
                      <p className="text-xs text-muted-foreground">Choose a specific date and time</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-4">
                    <input type="radio" name="schedule" value="recurring" className="rounded-full border-border" />
                    <div>
                      <span className="text-sm font-medium text-card-foreground">Recurring Scan</span>
                      <p className="text-xs text-muted-foreground">Set up automated recurring scans</p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Notification Settings */}
              <div>
                <h3 className="text-lg font-medium text-card-foreground mb-4">Notification Settings</h3>
                <div className="space-y-3">
                  <label className="flex items-center space-x-2">
                    <input type="checkbox" className="rounded border-border" defaultChecked />
                    <span className="text-sm text-card-foreground">Email notification when scan completes</span>
                  </label>
                  <label className="flex items-center space-x-2">
                    <input type="checkbox" className="rounded border-border" defaultChecked />
                    <span className="text-sm text-card-foreground">Alert on critical vulnerabilities found</span>
                  </label>
                  <label className="flex items-center space-x-2">
                    <input type="checkbox" className="rounded border-border" />
                    <span className="text-sm text-card-foreground">Generate automatic report</span>
                  </label>
                </div>
              </div>
            </div>

            <div className="flex items-center justify-end space-x-3 p-6 border-t border-border">
              <Button variant="outline" onClick={() => setIsScheduleModalOpen(false)}>
                Cancel
              </Button>
              <Button variant="default" iconName="Calendar" iconPosition="left">
                Schedule Scan
              </Button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default VulnerabilityActions;