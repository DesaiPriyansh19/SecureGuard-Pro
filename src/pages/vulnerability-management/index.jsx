import React, { useState, useEffect } from 'react';
import Header from '../../components/ui/Header';
import SecurityAlertBanner from '../../components/ui/SecurityAlertBanner';
import VulnerabilityMetrics from './components/VulnerabilityMetrics';
import VulnerabilityFilters from './components/VulnerabilityFilters';
import VulnerabilityTable from './components/VulnerabilityTable';
import VulnerabilityActions from './components/VulnerabilityActions';

const VulnerabilityManagement = () => {
  const [filters, setFilters] = useState({});
  const [vulnerabilities, setVulnerabilities] = useState([]);

  // Mock vulnerability data
  const mockVulnerabilities = [
    {
      id: 1,
      cveId: "CVE-2024-0001",
      severity: "Critical",
      cvssScore: 9.8,
      affectedSystems: ["web-server-01", "web-server-02", "api-gateway"],
      discoveryDate: "2024-08-28T10:30:00Z",
      status: "open",
      description: "Remote code execution vulnerability in Apache HTTP Server allowing attackers to execute arbitrary code with elevated privileges through malformed HTTP requests.",
      exploitAvailable: true,
      affectedVersions: "Apache HTTP Server 2.4.0 - 2.4.58",
      recommendedAction: "Upgrade to Apache HTTP Server 2.4.59 or apply security patch immediately. Implement WAF rules to block malicious requests.",
      assignedTo: "John Smith"
    },
    {
      id: 2,
      cveId: "CVE-2024-0002",
      severity: "High",
      cvssScore: 8.1,
      affectedSystems: ["database-01", "database-02"],
      discoveryDate: "2024-08-27T14:15:00Z",
      status: "in-progress",
      description: "SQL injection vulnerability in MySQL database server allowing unauthorized data access and potential data manipulation through crafted SQL queries.",
      exploitAvailable: false,
      affectedVersions: "MySQL 8.0.0 - 8.0.33",
      recommendedAction: "Update to MySQL 8.0.34 and review all database queries for proper input sanitization.",
      assignedTo: "Sarah Johnson"
    },
    {
      id: 3,
      cveId: "CVE-2024-0003",
      severity: "Medium",
      cvssScore: 6.5,
      affectedSystems: ["mail-server-01"],
      discoveryDate: "2024-08-26T09:45:00Z",
      status: "resolved",
      description: "Cross-site scripting (XSS) vulnerability in webmail interface allowing attackers to inject malicious scripts into email content.",
      exploitAvailable: true,
      affectedVersions: "Roundcube 1.5.0 - 1.6.2",
      recommendedAction: "Upgrade to Roundcube 1.6.3 and implement Content Security Policy headers.",
      assignedTo: "Mike Davis"
    },
    {
      id: 4,
      cveId: "CVE-2024-0004",
      severity: "High",
      cvssScore: 7.8,
      affectedSystems: ["firewall-01", "firewall-02", "router-01"],
      discoveryDate: "2024-08-25T16:20:00Z",
      status: "open",
      description: "Authentication bypass vulnerability in network firewall allowing unauthorized access to administrative functions through crafted authentication requests.",
      exploitAvailable: false,
      affectedVersions: "FortiGate 6.0.0 - 6.4.12",
      recommendedAction: "Apply firmware update to FortiGate 6.4.13 and review firewall access policies.",
      assignedTo: null
    },
    {
      id: 5,
      cveId: "CVE-2024-0005",
      severity: "Low",
      cvssScore: 3.7,
      affectedSystems: ["monitoring-server"],
      discoveryDate: "2024-08-24T11:10:00Z",
      status: "false-positive",
      description: "Information disclosure vulnerability in monitoring dashboard revealing system configuration details to authenticated users.",
      exploitAvailable: false,
      affectedVersions: "Nagios Core 4.4.0 - 4.4.9",
      recommendedAction: "Update to Nagios Core 4.4.10 and restrict access to sensitive configuration pages.",
      assignedTo: "Lisa Chen"
    },
    {
      id: 6,
      cveId: "CVE-2024-0006",
      severity: "Critical",
      cvssScore: 9.1,
      affectedSystems: ["app-server-01", "app-server-02", "load-balancer"],
      discoveryDate: "2024-08-23T13:55:00Z",
      status: "in-progress",
      description: "Deserialization vulnerability in Java application server allowing remote code execution through malicious serialized objects.",
      exploitAvailable: true,
      affectedVersions: "Apache Tomcat 9.0.0 - 9.0.78",
      recommendedAction: "Upgrade to Apache Tomcat 9.0.79 immediately and implement input validation for serialized data.",
      assignedTo: "David Wilson"
    }
  ];

  useEffect(() => {
    setVulnerabilities(mockVulnerabilities);
  }, []);

  const handleFiltersChange = (newFilters) => {
    setFilters(newFilters);
    // In a real application, this would trigger an API call to fetch filtered data
    console.log('Filters changed:', newFilters);
  };

  const handleBulkAction = (action, selectedIds) => {
    console.log(`Bulk action: ${action}`, selectedIds);
    // Handle bulk actions like assign, resolve, export
  };

  const handleRowAction = (action, vulnerability) => {
    console.log(`Row action: ${action}`, vulnerability);
    // Handle individual row actions like view, edit, menu
  };

  const handleAction = (action) => {
    console.log(`Action: ${action}`);
    // Handle primary actions like generate-report, create-task, etc.
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <SecurityAlertBanner />
      
      <main className="pt-20 pb-8">
        <div className="max-w-7xl mx-auto px-6">
          {/* Page Header */}
          <div className="mb-8">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold text-foreground">Vulnerability Management</h1>
                <p className="text-muted-foreground mt-2">
                  Identify, prioritize, and remediate security vulnerabilities across your enterprise systems
                </p>
              </div>
              <div className="text-right">
                <p className="text-sm text-muted-foreground">Last scan completed</p>
                <p className="text-sm font-medium text-foreground">Today at 3:45 AM</p>
              </div>
            </div>
          </div>

          {/* Vulnerability Metrics Dashboard */}
          <VulnerabilityMetrics />

          {/* Action Buttons and Quick Actions */}
          <VulnerabilityActions onAction={handleAction} />

          {/* Filters */}
          <VulnerabilityFilters 
            onFiltersChange={handleFiltersChange}
            activeFilters={filters}
          />

          {/* Vulnerability Table */}
          <VulnerabilityTable
            vulnerabilities={vulnerabilities}
            onBulkAction={handleBulkAction}
            onRowAction={handleRowAction}
          />
        </div>
      </main>
    </div>
  );
};

export default VulnerabilityManagement;