import React from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';

const VulnerabilityStatusWidget = () => {
  const vulnerabilityData = {
    total: 156,
    critical: 8,
    high: 23,
    medium: 67,
    low: 58,
    patched: 89,
    pending: 45,
    acknowledged: 22
  };

  const recentVulnerabilities = [
    {
      id: 1,
      cve: "CVE-2024-1234",
      title: "Remote Code Execution in Apache Struts",
      severity: "critical",
      cvss: 9.8,
      affected: "Web Application Server",
      status: "pending",
      discovered: "2025-09-01T04:30:44.633Z"
    },
    {
      id: 2,
      cve: "CVE-2024-5678",
      title: "SQL Injection in Custom CRM",
      severity: "high",
      cvss: 8.1,
      affected: "Customer Database",
      status: "acknowledged",
      discovered: "2025-09-01T03:15:44.633Z"
    },
    {
      id: 3,
      cve: "CVE-2024-9012",
      title: "Cross-Site Scripting in Portal",
      severity: "medium",
      cvss: 6.1,
      affected: "Employee Portal",
      status: "patched",
      discovered: "2025-09-01T02:45:44.633Z"
    }
  ];

  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'critical': return 'text-error bg-error/10 border-error/20';
      case 'high': return 'text-warning bg-warning/10 border-warning/20';
      case 'medium': return 'text-accent bg-accent/10 border-accent/20';
      case 'low': return 'text-success bg-success/10 border-success/20';
      default: return 'text-muted-foreground bg-muted border-border';
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'patched': return 'text-success bg-success/10';
      case 'pending': return 'text-error bg-error/10';
      case 'acknowledged': return 'text-warning bg-warning/10';
      default: return 'text-muted-foreground bg-muted';
    }
  };

  const getCVSSColor = (score) => {
    if (score >= 9.0) return 'text-error';
    if (score >= 7.0) return 'text-warning';
    if (score >= 4.0) return 'text-accent';
    return 'text-success';
  };

  const formatTimestamp = (timestamp) => {
    const date = new Date(timestamp);
    const now = new Date();
    const diffMs = now - date;
    const diffHours = Math.floor(diffMs / 3600000);
    
    if (diffHours < 1) return 'Less than 1h ago';
    if (diffHours < 24) return `${diffHours}h ago`;
    return `${Math.floor(diffHours / 24)}d ago`;
  };

  return (
    <div className="bg-card rounded-lg border border-border security-shadow-md">
      <div className="p-6 border-b border-border">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-warning/10 rounded-lg flex items-center justify-center">
              <Icon name="Bug" size={20} className="text-warning" />
            </div>
            <div>
              <h3 className="text-lg font-semibold text-card-foreground">Vulnerability Status</h3>
              <p className="text-sm text-muted-foreground">Security vulnerability tracking</p>
            </div>
          </div>
          <Button variant="ghost" size="sm" iconName="ExternalLink" iconPosition="right">
            Manage
          </Button>
        </div>
      </div>
      <div className="p-6">
        {/* Vulnerability Summary */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
          <div className="bg-error/5 rounded-lg p-4 border border-error/20">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-error">{vulnerabilityData?.critical}</p>
                <p className="text-sm text-error/80">Critical</p>
              </div>
              <Icon name="AlertCircle" size={20} className="text-error" />
            </div>
          </div>
          
          <div className="bg-warning/5 rounded-lg p-4 border border-warning/20">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-warning">{vulnerabilityData?.high}</p>
                <p className="text-sm text-warning/80">High</p>
              </div>
              <Icon name="AlertTriangle" size={20} className="text-warning" />
            </div>
          </div>
          
          <div className="bg-accent/5 rounded-lg p-4 border border-accent/20">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-accent">{vulnerabilityData?.medium}</p>
                <p className="text-sm text-accent/80">Medium</p>
              </div>
              <Icon name="Info" size={20} className="text-accent" />
            </div>
          </div>
          
          <div className="bg-success/5 rounded-lg p-4 border border-success/20">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-success">{vulnerabilityData?.low}</p>
                <p className="text-sm text-success/80">Low</p>
              </div>
              <Icon name="CheckCircle" size={20} className="text-success" />
            </div>
          </div>
        </div>

        {/* Status Distribution */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          <div className="text-center p-4 bg-success/5 rounded-lg border border-success/20">
            <p className="text-2xl font-bold text-success">{vulnerabilityData?.patched}</p>
            <p className="text-sm text-muted-foreground">Patched</p>
          </div>
          <div className="text-center p-4 bg-error/5 rounded-lg border border-error/20">
            <p className="text-2xl font-bold text-error">{vulnerabilityData?.pending}</p>
            <p className="text-sm text-muted-foreground">Pending</p>
          </div>
          <div className="text-center p-4 bg-warning/5 rounded-lg border border-warning/20">
            <p className="text-2xl font-bold text-warning">{vulnerabilityData?.acknowledged}</p>
            <p className="text-sm text-muted-foreground">Acknowledged</p>
          </div>
        </div>

        {/* Recent Vulnerabilities */}
        <div>
          <h4 className="font-semibold text-card-foreground mb-4">Recent Vulnerabilities</h4>
          <div className="space-y-3">
            {recentVulnerabilities?.map((vuln) => (
              <div key={vuln?.id} className="p-4 bg-muted/20 rounded-lg hover:bg-muted/30 transition-security">
                <div className="flex items-start justify-between mb-2">
                  <div className="flex items-center space-x-3">
                    <div className="w-8 h-8 bg-warning/10 rounded-full flex items-center justify-center">
                      <Icon name="Bug" size={14} className="text-warning" />
                    </div>
                    <div>
                      <div className="flex items-center space-x-2">
                        <p className="font-medium text-sm text-card-foreground">{vuln?.cve}</p>
                        <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getSeverityColor(vuln?.severity)}`}>
                          {vuln?.severity}
                        </span>
                      </div>
                      <p className="text-sm text-card-foreground mt-1">{vuln?.title}</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <div className="text-right">
                      <p className={`text-sm font-bold ${getCVSSColor(vuln?.cvss)}`}>
                        CVSS {vuln?.cvss}
                      </p>
                    </div>
                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(vuln?.status)}`}>
                      {vuln?.status}
                    </span>
                  </div>
                </div>
                <div className="flex items-center justify-between text-xs text-muted-foreground ml-11">
                  <span>Affected: {vuln?.affected}</span>
                  <span>Discovered: {formatTimestamp(vuln?.discovered)}</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityStatusWidget;